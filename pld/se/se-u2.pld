Name        SEthernet Bus Interface and Address Decoder ;
PartNo      00 ;
Date        2023-10-23 ;
Revision    01 ;
Designer    rhalkyard ;
Company     none ;
Assembly    SEthernet Macintosh SE PDS Ethernet Card ;
Location    U2 ;
Device      g16v8a ;

/*
Address decoding and glue logic for SEthernet
*/

/* INPUTS */
PIN [1..8]      = [A23..16] ;   /* High byte of address */
PIN 9           = !AS ;         /* Address strobe from CPU */
/* PIN 10       = gnd ; */
PIN 11          = !ENC_INT ;    /* Interrupt from ENC624J600 */

/* IO USED AS INPUT */
PIN 13          = !LDS ;        /* Low byte data-strobe from CPU */
PIN 14          = !UDS ;        /* High byte data-strobe from CPU */

/* IO USED AS OUTPUTS */
PIN 12          = !IPL1 ;       /* CPU interrupt-level bit 1 */
PIN 16          = B0SEL ;       /* Byte 0 select to ENC624J600 */
PIN 17          = B1SEL ;       /* Byte 1 select to ENC624J600 */
PIN 18          = !IPL0 ;       /* CPU interrupt-level bit 0 */
PIN 19          = CS ;          /* Chip select to ENC624J600 */

PINNODE 15      = CSdelay ;     /* Feedback version of CS to add delay to BxSEL */
/* PIN 20       = vcc ; */

/* Select on a 64k space starting at 0x80 0000 */
select          = AS & [A23..16]:'h'80xxxx ;
CS              = select;

/* Feedback-delay version of CS - since the pin that is wired to CS (19) cannot
be used for feedback, we have to use another one for this purpose :( */
CSdelay         = select;

/*
Generate byte-select lines for ENC624J600

The ENC624J600 timing specs require a 1ns delay between asserting CS and
B0SEL/B1SEL (Tpsp1 for read, Tpsp5 for writes). On reads, the 68000 asserts
UDS/LDS simultaneously with the address, so there is no delay. Even though the
spec is only 1ns, the ENC624J600 really doesn't like this, and reads return
garbage.

We can get around it by feeding the CS output back in to gate UDS/LDS - the
delay introduced by the GAL is enough to satisfy the delay requirement.
*/
B0SEL           = LDS & CSdelay ;
B1SEL           = UDS & CSdelay ;

/* Drive CPU interrupt line as open-collector */
IPL0            = ENC_INT ;
IPL0.oe         = ENC_INT ;
